{"ast":null,"code":"import _slicedToArray from \"/Users/p0s00zi/__personal/extra/whatsapp-BigQuiz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/p0s00zi/__personal/extra/whatsapp-BigQuiz/src/__uploader.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport JSZip from 'jszip'; //import fs from 'fs';\n\nimport { parseString } from 'whatsapp-chat-parser';\nimport Dropzone from './components/Dropzone/Dropzone';\nimport MessageViewer from './components/MessageViewer/MessageViewer';\nimport Credits from './components/Credits/Credits';\nimport * as S from './style';\nimport useDebounce from './hooks/useDebounce';\nimport exampleChat from './assets/whatsapp-chat-example.zip'; //import initialChat from './assets/_chat.txt';\n\nconst showError = (message, err) => {\n  console.error(err || message); // eslint-disable-line no-console\n\n  alert(message); // eslint-disable-line no-alert\n};\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const _useState3 = useState(5000),\n        _useState4 = _slicedToArray(_useState3, 2),\n        messagesLimit = _useState4[0],\n        setMessagesLimit = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isMenuOpen = _useState6[0],\n        setIsMenuOpen = _useState6[1];\n\n  const closeButtonRef = useRef(null);\n  const openButtonRef = useRef(null);\n  const isFirstRender = useRef(true); //const fileContents = fs.readFileSync({initialChat}, 'utf8');\n\n  const closeMenu = () => {\n    setIsMenuOpen(false);\n  };\n\n  const openMenu = () => {\n    setIsMenuOpen(true);\n  };\n\n  const loginconsole = file => {\n    console.log('msg: ' + file);\n  };\n\n  function saveParsedMessages(messages) {\n    console.log(messages.length);\n    console.log(messages);\n  }\n\n  function exportDataToFile(data) {}\n\n  const processFile = file => {\n    loginconsole(file);\n    if (!file) return;\n    const reader = new FileReader();\n\n    if (file.type === 'application/zip') {\n      reader.onloadend = e => {\n        const arrayBuffer = e.target.result;\n        const jszip = new JSZip();\n        jszip.loadAsync(arrayBuffer).then(({\n          files\n        }) => {\n          const txtFiles = Object.entries(files).filter(([fileName]) => fileName.endsWith('.txt'));\n\n          if (!txtFiles.length) {\n            throw new Error('No txt files found in archive');\n          }\n\n          return txtFiles.sort(([a], [b]) => a.length - b.length)[0][1].async('string');\n        }).then(parseString).then(setMessages).catch(showError);\n      };\n\n      reader.readAsArrayBuffer(file);\n    } else if (file.type === 'text/plain') {\n      reader.onloadend = () => parseString(reader.result) //.then(setMessages)\n      .then(messages => {\n        saveParsedMessages(messages);\n      }).catch(err => showError('An error has occurred while parsing the file', err));\n\n      reader.readAsText(file);\n    } else {\n      showError(\"File type \".concat(file.type, \" not supported\"));\n    }\n  };\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      //processFile({fileContents});\n      //console.log('initialChat: ' + {initialChat});\n      return;\n    }\n\n    if (isMenuOpen) closeButtonRef.current.focus();else openButtonRef.current.focus();\n  }, [isMenuOpen]);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  useEffect(() => {\n    const keyDownHandler = e => {\n      if (e.keyCode === 27) closeMenu();\n    };\n\n    document.addEventListener('keydown', keyDownHandler);\n    return () => document.removeEventListener('keydown', keyDownHandler);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(S.GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(S.Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(S.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Dropzone, {\n    onFileUpload: processFile,\n    id: \"dropzone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"OR\"), React.createElement(\"a\", {\n    href: exampleChat,\n    download: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Download example chat\")), React.createElement(MessageViewer, {\n    messages: messages,\n    limit: useDebounce(messagesLimit, 5000),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(S.MenuOpenButton, {\n    type: \"button\",\n    onClick: openMenu,\n    ref: openButtonRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Open menu\"), React.createElement(S.Overlay, {\n    type: \"button\",\n    isActive: isMenuOpen,\n    onClick: closeMenu,\n    tabIndex: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(S.Sidebar, {\n    isOpen: isMenuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(S.MenuCloseButton, {\n    type: \"button\",\n    onClick: closeMenu,\n    ref: closeButtonRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Close menu\"), React.createElement(S.SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(S.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(S.Label, {\n    htmlFor: \"limit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Messages limit\"), React.createElement(S.Input, {\n    id: \"limit\",\n    type: \"number\",\n    min: \"0\",\n    max: messages.length,\n    value: messagesLimit,\n    onChange: e => setMessagesLimit(parseInt(e.currentTarget.value, 10)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(S.InputDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"A high number may freeze the page for a while, change this with caution\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Credits, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/p0s00zi/__personal/extra/whatsapp-BigQuiz/src/__uploader.js"],"names":["React","useState","useRef","useEffect","JSZip","parseString","Dropzone","MessageViewer","Credits","S","useDebounce","exampleChat","showError","message","err","console","error","alert","App","messages","setMessages","messagesLimit","setMessagesLimit","isMenuOpen","setIsMenuOpen","closeButtonRef","openButtonRef","isFirstRender","closeMenu","openMenu","loginconsole","file","log","saveParsedMessages","length","exportDataToFile","data","processFile","reader","FileReader","type","onloadend","e","arrayBuffer","target","result","jszip","loadAsync","then","files","txtFiles","Object","entries","filter","fileName","endsWith","Error","sort","a","b","async","catch","readAsArrayBuffer","readAsText","current","focus","keyDownHandler","keyCode","document","addEventListener","removeEventListener","parseInt","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport JSZip from 'jszip';\n//import fs from 'fs';\nimport { parseString } from 'whatsapp-chat-parser';\n\nimport Dropzone from './components/Dropzone/Dropzone';\nimport MessageViewer from './components/MessageViewer/MessageViewer';\nimport Credits from './components/Credits/Credits';\nimport * as S from './style';\n\nimport useDebounce from './hooks/useDebounce';\n\nimport exampleChat from './assets/whatsapp-chat-example.zip';\n//import initialChat from './assets/_chat.txt';\n\nconst showError = (message, err) => {\n  console.error(err || message); // eslint-disable-line no-console\n  alert(message); // eslint-disable-line no-alert\n};\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [messagesLimit, setMessagesLimit] = useState(5000);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const closeButtonRef = useRef(null);\n  const openButtonRef = useRef(null);\n  const isFirstRender = useRef(true);\n\n  //const fileContents = fs.readFileSync({initialChat}, 'utf8');\n\n  const closeMenu = () => {\n    setIsMenuOpen(false);\n  };\n\n  const openMenu = () => {\n    setIsMenuOpen(true);\n  };\n\n  const loginconsole = file => {\n    console.log('msg: ' + file);\n  };\n\n  function saveParsedMessages(messages) {\n  \tconsole.log(messages.length);\n  \tconsole.log(messages);\n\n\n  }\n\n  function exportDataToFile(data) {\n\n  }\n\n  const processFile = file => {\n    loginconsole(file);\n\n    if (!file) return;\n\n    const reader = new FileReader();\n\n    if (file.type === 'application/zip') {\n      reader.onloadend = e => {\n        const arrayBuffer = e.target.result;\n        const jszip = new JSZip();\n\n        jszip\n          .loadAsync(arrayBuffer)\n          .then(({ files }) => {\n            const txtFiles = Object.entries(files).filter(([fileName]) =>\n              fileName.endsWith('.txt'),\n            );\n\n            if (!txtFiles.length) {\n              throw new Error('No txt files found in archive');\n            }\n\n            return txtFiles\n              .sort(([a], [b]) => a.length - b.length)[0][1]\n              .async('string');\n          })\n          .then(parseString)\n          .then(setMessages)  \n          .catch(showError);\n      };\n      reader.readAsArrayBuffer(file);\n    } else if (file.type === 'text/plain') {\n      reader.onloadend = () =>\n        parseString(reader.result)\n          //.then(setMessages)\n          .then( messages => {\n          \tsaveParsedMessages(messages);\n          })\n          .catch(err =>\n            showError('An error has occurred while parsing the file', err),\n          );\n      reader.readAsText(file);\n    } else {\n      showError(`File type ${file.type} not supported`);\n    }\n  };\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      //processFile({fileContents});\n      //console.log('initialChat: ' + {initialChat});\n\n      return;\n    }\n\n    if (isMenuOpen) closeButtonRef.current.focus();\n    else openButtonRef.current.focus();\n  }, [isMenuOpen]);\n\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n\n  useEffect(() => {\n    const keyDownHandler = e => {\n      if (e.keyCode === 27) closeMenu();\n    };\n\n    document.addEventListener('keydown', keyDownHandler);\n    return () => document.removeEventListener('keydown', keyDownHandler);\n  }, []);\n\n  return (\n    <>\n      <S.GlobalStyles />\n      <S.Container>\n        <S.Header>\n          <Dropzone onFileUpload={processFile} id=\"dropzone\" />\n          <span>OR</span>\n          <a href={exampleChat} download>\n            Download example chat\n          </a>\n        </S.Header>\n        <MessageViewer\n          messages={messages}\n          limit={useDebounce(messagesLimit, 5000)}\n        />\n        <S.MenuOpenButton type=\"button\" onClick={openMenu} ref={openButtonRef}>\n          Open menu\n        </S.MenuOpenButton>\n        <S.Overlay\n          type=\"button\"\n          isActive={isMenuOpen}\n          onClick={closeMenu}\n          tabIndex=\"-1\"\n        />\n        <S.Sidebar isOpen={isMenuOpen}>\n          <S.MenuCloseButton\n            type=\"button\"\n            onClick={closeMenu}\n            ref={closeButtonRef}\n          >\n            Close menu\n          </S.MenuCloseButton>\n          <S.SidebarContainer>\n            <S.Field>\n              <S.Label htmlFor=\"limit\">Messages limit</S.Label>\n              <S.Input\n                id=\"limit\"\n                type=\"number\"\n                min=\"0\"\n                max={messages.length}\n                value={messagesLimit}\n                onChange={e =>\n                  setMessagesLimit(parseInt(e.currentTarget.value, 10))\n                }\n              />\n              <S.InputDescription>\n                A high number may freeze the page for a while, change this with\n                caution\n              </S.InputDescription>\n            </S.Field>\n\n            <div>\n              <Credits />\n            </div>\n          </S.SidebarContainer>\n        </S.Sidebar>\n      </S.Container>\n    </>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}