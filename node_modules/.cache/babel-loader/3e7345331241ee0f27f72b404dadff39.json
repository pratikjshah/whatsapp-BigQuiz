{"ast":null,"code":"var _jsxFileName = \"/Users/p0s00zi/__personal/extra/whatsapp-BigQuiz/src/components/Message/Message.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './style';\n\nfunction parseDate(sDate) {\n  var event = new Date(sDate);\n  const options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  };\n  return event.toLocaleDateString('en-IN', options); //return event;\n  //return event.toUTCString();\n}\n\nfunction renderMessage(message) {\n  var msg = message.message;\n\n  if (message.hasAttachment) {\n    var fileName = msg.split(\" (file attached)\")[0];\n    var restOfMessage = msg.split(\" (file attached)\")[1];\n    var attachment = '<img class=\"media\" src=\"./media/' + fileName + '\" />';\n\n    if (fileName.indexOf(\"VID\") === 0) {\n      attachment = '<video width=\"auto\" controls><source src=\"./media/' + fileName + '\" type=\"video/mp4\">Your browser does not support HTML5 video.</video>';\n    }\n\n    msg = attachment + restOfMessage;\n  }\n\n  return msg;\n}\n\nconst Message = ({\n  message,\n  color,\n  isActiveUser,\n  sameAuthorAsPrevious,\n  isQuestion,\n  hasAttachment\n}) => {\n  const isSystem = message.author === 'System';\n  const dateTime = parseDate(message.date);\n  return React.createElement(S.Item, {\n    isSystem: isSystem,\n    isActiveUser: isActiveUser,\n    sameAuthorAsPrevious: sameAuthorAsPrevious,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(S.Bubble, {\n    isSystem: isSystem,\n    isActiveUser: isActiveUser,\n    isQuestion: isQuestion,\n    hasAttachment: hasAttachment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(S.Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, !isSystem && !sameAuthorAsPrevious && React.createElement(S.Author, {\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, message.author), React.createElement(S.Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: renderMessage(message)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), !isSystem && React.createElement(S.Date, {\n    dateTime: dateTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, parseDate(message.date))));\n};\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    date: PropTypes.string,\n    author: PropTypes.string,\n    message: PropTypes.string,\n    isQuestion: PropTypes.bool,\n    hasAttachment: PropTypes.bool\n  }).isRequired,\n  color: PropTypes.string,\n  isActiveUser: PropTypes.bool,\n  sameAuthorAsPrevious: PropTypes.bool\n};\nMessage.defaultProps = {\n  color: 'black',\n  isActiveUser: false,\n  sameAuthorAsPrevious: false\n};\nexport default Message;","map":{"version":3,"sources":["/Users/p0s00zi/__personal/extra/whatsapp-BigQuiz/src/components/Message/Message.js"],"names":["React","PropTypes","S","parseDate","sDate","event","Date","options","weekday","year","month","day","hour","minute","hour12","toLocaleDateString","renderMessage","message","msg","hasAttachment","fileName","split","restOfMessage","attachment","indexOf","Message","color","isActiveUser","sameAuthorAsPrevious","isQuestion","isSystem","author","dateTime","date","__html","propTypes","shape","string","bool","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './style';\n\nfunction parseDate(sDate) {\n    var event = new Date(sDate);\n    const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric', hour:'numeric', minute:'numeric', hour12: true };\n    return event.toLocaleDateString('en-IN',options);\n    //return event;\n    //return event.toUTCString();\n  }\n\nfunction renderMessage(message) {\n  var msg = message.message;\n  if(message.hasAttachment) {\n    var fileName = msg.split(\" (file attached)\")[0];\n    var restOfMessage = msg.split(\" (file attached)\")[1];\n    var attachment = '<img class=\"media\" src=\"./media/' + fileName + '\" />';\n    if(fileName.indexOf(\"VID\") === 0) {\n      attachment = '<video width=\"auto\" controls><source src=\"./media/' + fileName + '\" type=\"video/mp4\">Your browser does not support HTML5 video.</video>';\n    }\n    msg = attachment + restOfMessage;\n  }\n  return msg;\n}\n\nconst Message = ({ message, color, isActiveUser, sameAuthorAsPrevious, isQuestion, hasAttachment }) => {\n  const isSystem = message.author === 'System';\n  const dateTime = parseDate(message.date);\n\n  return (\n    <S.Item\n      isSystem={isSystem}\n      isActiveUser={isActiveUser}\n      sameAuthorAsPrevious={sameAuthorAsPrevious}\n    >\n      <S.Bubble isSystem={isSystem} isActiveUser={isActiveUser} isQuestion={isQuestion} hasAttachment={hasAttachment}>\n        <S.Wrapper>\n          {!isSystem && !sameAuthorAsPrevious && (\n            <S.Author color={color}>{message.author}</S.Author>\n          )}\n          <S.Message>\n            <div dangerouslySetInnerHTML={{__html: renderMessage(message)}} />\n          </S.Message>\n        </S.Wrapper>\n        {!isSystem && (\n          <S.Date dateTime={dateTime}>\n            {parseDate(message.date)}\n          </S.Date>\n        )}\n      </S.Bubble>\n    </S.Item>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    date: PropTypes.string,\n    author: PropTypes.string,\n    message: PropTypes.string,\n    isQuestion: PropTypes.bool,\n    hasAttachment: PropTypes.bool\n  }).isRequired,\n  color: PropTypes.string,\n  isActiveUser: PropTypes.bool,\n  sameAuthorAsPrevious: PropTypes.bool,\n};\n\nMessage.defaultProps = {\n  color: 'black',\n  isActiveUser: false,\n  sameAuthorAsPrevious: false,\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}